[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mineral-classifier"
version = "0.1.0"
description = "Machine learning project for mineral classification"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "scikit-learn==1.6.0",
    "torch-geometric==2.6.1",
    "seaborn==0.13.2",
    "plotly==5.24.1",
    "streamlit==1.45.1",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
# Same as Black.
line-length = 88
indent-width = 4
# Python 3.11+
target-version = "py311"
# Enumerate all fixed violations.
show-fixes = true

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Enable reformatting of code snippets in docstrings.
docstring-code-format = true
# Format all docstring code snippets with a line length of 60.
docstring-code-line-length = 60

[tool.ruff.lint]
# Rules to enable
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "PD",  # pandas-vet
    "NPY", # numpy-specific rules
    "RUF", # ruff-specific rules
    "D",   # pydocstyle (docstring conventions)
    "SIM", # flake8-simplify
    "I", # isort
]
extend-select = []
# Rules to ignore
ignore = [
    "E501",  # Line too long (we use line-length instead)
    "B008",  # Do not perform function calls in argument defaults
    "C901",  # Too complex (we'll handle complexity case by case)
    "PD901", # Avoid using the generic variable name `df` for DataFrames
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
